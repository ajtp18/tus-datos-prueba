services:
  postgresql:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - bootstrap.memory_lock=true
      - network.host=0.0.0.0
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:7000
      - http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  elasticvue:
    image: docker.io/cars10/elasticvue
    ports:
      - 7000:8080
    environment:
      ELASTICVUE_CLUSTERS: |
        [
          {
            "name": "local",
            "uri": "http://localhost:9200"
          }
        ]
  
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - 7001:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password


  logstash:
    build: ./services/logstash
    volumes:
      - ./logstash:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
      - postgresql
    environment:
      xpack.monitoring.enabled: 'false'
      LS_JAVA_OPTS: '-Xms256m -Xmx256m'
      DB_USER: ${POSTGRES_USER}
      DB_DATABASE: ${POSTGRES_DB}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bin/logstash", "-t"]
      interval: 60s
      timeout: 30s
      retries: 5

  mailhog:
    image: docker.io/mailhog/mailhog
    restart: unless-stopped
    ports:
      - 1025:1025
      - 7025:8025

volumes:
  postgres-data:
  elasticsearch-data: